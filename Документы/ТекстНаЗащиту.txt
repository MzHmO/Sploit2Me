Н:
	1слайд: Здравствуйте, наша команда называется "Мы" и мы готовы представить вам на защиту свой проект Sploit2me.
	2слайд: Наша команда состоит из четырех человек: два разработчика, аналитик и тимлид
М:
	3слайд: Основной идеей проекта стал уход зарубежных компаний из России с последующей невозможность эксплуатации их программного обеспечения по нахождению и уведомлению о появляющихся уязвимостях в других продуктах, в том числе, российском ПО. Тем не менее, существует база данных уязвимостей, которая поддерживается федеральной службой по техническому и экспортному контролю России, однако реализации интеграции с этой базой в публичном доступе нет. Таким образом, наше решение позволяет осуществить интеграцию с этой базой данных уязвимостей и предоставить пользователям функционал по получению информации о новых уязвимостях и уведомлению об этом пользователей. 
	4слайд: Целевой аудиторией являются все те, кто занимается защитой корпоративной инфраструктуры бизнеса. Не буду скрывать, идея проекта родилась на встрече в офисе УЦСБ, когда мы со специалистами обсуждали некоторые злободневные проблемы.

Н:
	5слайд: Подобный функционал присутствует в коммерческих продуктах и зачастую поставляется вместе с достаточно дорогостоящими решениями, которые может позволить себе далеко не каждая компания. Наше же решение имеет полностью открытый исходный код и доступно для использования каждому. 
	6слайд: Был составлен календарный план проекта со списком задач, необходимых к исполнению в отведенные сроки.
	7слайд: Так родился проект Sploit2Me, позволяющий автоматически извлекать новые уязвимости из БДУ ФСТЭК и уведомлять пользователя об этом посредством чат-бота Telegram

М:
	8слайд: Мы решили попробовать делать все "по-настоящему" и начали процесс разработки с составления технического задания с основными требованиями к продукту.
	9слайд: В качестве технологического стека были выбраны следующие компоненты по причине простоты изучения разработки с ними. Данные компоненты отлично подходят для написания минимального Proof of Concept. Тем не менее, мы использовали обычные параметризированные SQL-запросы, поэтому переделать под ту же Postgre не составит труда.
	10слайд: Концептуально есть три потока, три сущности. Первый поток осуществляет работу с пользовательским интерфейсом, оттуда происходят обращения к базе. А база пополняется с помощью парсера.

Н:	
	11слайд: Для создания дизайн-макетов мы использовали Figma. Были созданы следующие макеты.
	12слайд: Итоговая реализация повторяет дизайн-макеты из Figma. Это главная страница со всеми уязвимостями (возможно применять фильтрацию)
	13слайд: Вывод общей статистики по уязвимостям и механизм добавления Telegram-аккаунта.
	14слайд: Механизм регистрации и входа в систему.

М:
	15слайд: Изначально не подразумевалось извлечение какой-либо коммерческой выгоды от проекта. Однако, можно без проблем рассмотреть некоторые схемы монетизации, которые могут приносить средства с минимальными вложениями.
	16слайд: В качестве заключения отмечу, что за время работы было найдено уже 14 новых уязвимостей, о которых было своевременно отправлено уведомление в Telegram
	17слайд: Предлагаю показать демо.